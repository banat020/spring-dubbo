<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/data/jpa 
     		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
			">
	<!-- 自动扫描除Controller以外的注解 -->	
	<context:component-scan base-package="com.banling.springdubbo.ds.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 注入属性 -->
	<bean id="propertyPlaceHolderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
			    <value>classpath:config/ds/ds.config.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false" />
	</bean>
	
	<!-- 阿里 druid 数据库连接池 -->
	<bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close" >    
       <!-- 数据库基本信息配置 -->  
       <property name = "url" value = "${druid.url}" />    
       <property name = "username" value = "${druid.username}" />    
       <property name = "password" value = "${druid.password}" />    
       <property name = "driverClassName" value = "${druid.driverClassName}" />    
       <property name = "filters" value = "${druid.filters}" />    

       <property name = "maxActive" value = "10" />  

       <!-- 初始化连接数量 -->  
       <property name = "initialSize" value = "${druid.initialSize}" />  
       <!-- 配置获取连接等待超时的时间 -->  
       <property name = "maxWait" value = "${druid.maxWait}" />  
       <!-- 最小空闲连接数 -->  
       <property name = "minIdle" value = "${druid.minIdle}" />    
       <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
       <property name = "timeBetweenEvictionRunsMillis" value ="${druid.timeBetweenEvictionRunsMillis}" />  
       <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
       <property name = "minEvictableIdleTimeMillis" value ="${druid.minEvictableIdleTimeMillis}" />    
       <property name = "validationQuery" value = "${druid.validationQuery}" />    
       <property name = "testWhileIdle" value = "${druid.testWhileIdle}" />    
       <property name = "testOnBorrow" value = "${druid.testOnBorrow}" />    
       <property name = "testOnReturn" value = "${druid.testOnReturn}" />    
       <property name = "maxOpenPreparedStatements" value ="${druid.maxOpenPreparedStatements}" />  
       <!-- 打开 removeAbandoned 功能 -->  
       <property name = "removeAbandoned" value = "${druid.removeAbandoned}" />  
       <!-- 1800 秒，也就是 30 分钟 -->  
       <property name = "removeAbandonedTimeout" value ="${druid.removeAbandonedTimeout}" />  
       <!-- 关闭 abanded 连接时输出错误日志 -->     
       <property name = "logAbandoned" value = "${druid.logAbandoned}" />  
  </bean>
  
  	<!-- c3p0连接池
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${druid.driverClassName}" />
		<property name="jdbcUrl" value="${druid.url}" />
		<property name="user" value="${druid.username}" />
		<property name="password" value="${druid.password}" />
		<property name="maxPoolSize" value="5" />
		<property name="initialPoolSize" value="3" />
		<property name="minPoolSize" value="2" />
	</bean>
	 -->
	 
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />		
		<property name="persistenceUnitName" value="jpaUnit"></property>		 
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="MYSQL" />
				<property name="showSql" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"></property>  

			</bean>
		</property>
		
	</bean>
	
	<!--配置JPA EntityManager事务管理器-->	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	 
	<!-- 使用声明式控制事务 -->	
	<!-- 注意，应用MyBatis只做查询，对MyBatis的应用不起用事务， -->
	<tx:annotation-driven />
	 
	<!-- 创建MyBatis的SqlSessionFactory(注：通过SqlSessionFactoryBean来创建)，同时指定数据源 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
        <!-- 
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
         -->
        <property name="mapperLocations" value="classpath*:com/banling/springdubbo/ds/**/mapper/*.xml" />
    </bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
  		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
    <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper。项目中不管是否直接启用MyBatis的动态代理Mapper，都要对mapper作设置。   -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
        <property name="basePackage" value="com.banling.springdubbo.ds.**.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
</beans>	